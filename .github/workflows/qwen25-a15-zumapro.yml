name: Qwen2.5 build A15 zumapro +susfs +sultan +kernelsu

on:
  workflow_dispatch:
  workflow_call:

jobs:
  prepare-environment:
    runs-on: ubuntu-20.04

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v1
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192

      - name: Update packages
        run: sudo apt-get update && sudo apt-get upgrade -y

      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            clang \
            make \
            bc \
            bison \
            flex \
            libssl-dev \
            libncurses5-dev \
            zip \
            unzip \
            wget

      - name: Set CONFIG Environment Variable
        run: echo "CONFIG=android_kernel_google_zumapro" >> $GITHUB_ENV
      
      - name: Fix permissions for workspace
        run: sudo chmod -R 777 ${{ github.workspace }}

      # Clone AnyKernel3 and Other Dependencies
      - name: Clone repositories
        run: |
          ANYKERNEL_BRANCH="gki-2.0"
          SUSFS_BRANCH="gki-android14-6.1"

          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"

          git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH" ./AnyKernel3
          git clone https://github.com/czak89/susfs4ksu.git -b "$SUSFS_BRANCH" ./susfs4ksu
          git clone https://github.com/TheWildJames/kernel_patches.git ./kernel_patches
          git clone https://github.com/kerneltoast/android_kernel_google_zumapro $CONFIG

      # Apply patches and integrate KernelSU, SUSFS, etc.
      - name: Prepare kernel source with patches
        run: |
          cd "$CONFIG"

          echo "Adding KernelSU..."
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/main/kernel/setup.sh" | bash -

          # Apply SUSFS Patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./
          cp -r ../susfs4ksu/kernel_patches/fs ./fs
          cp -r ../susfs4ksu/kernel_patches/include/linux ./include/linux

          echo "Patching KernelSU with SUSFS..."
          cd "./KernelSU-Next"
          patch -p1 < ../../kernel_patches/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch
          cd ..

          # Apply KSU Hooks and Hide Stuff Patches
          cp ../kernel_patches/new_hooks.patch ./
          patch -p1 --fuzz=3 < new_hooks.patch

          cp ../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch

          # Apply KernelSU & SUSFS SUltan Fixes
          echo "Applying additional patches..."
          cp ../kernel_patches/sys.c_fix.patch ./
          patch -p1 --fuzz=3 < sys.c_fix.patch

          sed -i 's/poofed_size: '\''%u'\''/poofed_size: '\''%llu'\''/g' ./fs/susfs.c
          sed -i 's/length of string: %u/length of string: %lu/g' ./fs/susfs.c

      # Add SUSFS Configuration Settings to defconfig
      - name: Update kernel config with KernelSU and SUSFS options
        run: |
          cd "$CONFIG"

          echo "Adding configuration settings..."
          sed -i '/^# CONFIG_KSU is not set/a\
CONFIG_KSU=y' ./arch/arm64/configs/zumapro_defconfig

          # Additional SUSFS configurations (you can adjust these based on your requirements)
          cat << EOF >> ./arch/arm64/configs/zumapro_defconfig
CONFIG_KSU_SUSFS=y
CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
CONFIG_KSU_SUSFS_SUS_PATH=y
CONFIG_KSU_SUSFS_SUS_MOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
CONFIG_KSU_SUSFS_SUS_KSTAT=y
CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y
CONFIG_KSU_SUSFS_TRY_UMOUNT=y
CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
CONFIG_KSU_SUSFS_SPOOF_UNAME=y
CONFIG_KSU_SUSFS_ENABLE_LOG=y
CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
CONFIG_KSU_SUSFS_SUS_SU=n
CONFIG_TMPFS_XATTR=y
CONFIG_TMPFS_POSIX_ACL=y

# Optionally, you can modify the local version for identification
CONFIG_LOCALVERSION="-Sultan-Wild+"
EOF

      # Build the Kernel
      - name: Compile kernel with patches and configurations
        run: |
          cd "$CONFIG"

          echo "Compiling kernel..."
          make zumapro_defconfig O=../out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1
          make -j$(nproc --all) O=../out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- LLVM=1

      # Create and upload artifacts (ZIP files)
      - name: Package build output into ZIPs
        run: |
          cd "$CONFIG/../"

          echo "Copying kernel images..."
          cp ./out/arch/arm64/boot/Image.gz-dtb ./AnyKernel3/
          cat ./out/google-modules/soc/gs/arch/arm64/boot/dts/*.dtb > ./AnyKernel3/dtbs

          # Create ZIP file
          cd AnyKernel3
          zip -r "A15_Sultan_KernelSU_SUSFS_ZumaPro.zip" ./*

      - name: Upload build artifacts (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: kernel-zumapro
          path: ./AnyKernel3/A15_Sultan_KernelSU_SUSFS_ZumaPro.zip
